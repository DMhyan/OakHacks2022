from tkinter import *
import tkinter.font as font
import sqlite3
from PIL import Image, ImageTk
from datetime import datetime
import tkinter.font as font
counter = 66600
running = False
conn = sqlite3.connect("C:\OakCodefest\points.db")
c = conn.cursor()

def points():
    
    p = Tk()
    p.geometry("1010x550")
    p.title("Points system")
    label_2 = Label(p, text="Points", font=("Courier", 20, "bold"), fg="turquoise")
    label_2.place(x=480,y=0)
   
    
    dbutton = Button(p,text="Classroom", padx=60, pady=60, bg="turquoise", fg="white" , font= ('Helvetica 20 bold'), command = dashBoard1 )
    dbutton.place(x=50,y=75)
    lbutton = Button(p, text="Leaderboard", padx=50, pady=60, bg="Pink", fg="blue", font= ('Helvetica 20 bold'))
    lbutton.place(x=700,y=75)
    debutton = Button(p, text="Customise", padx=60, pady=60, bg="Blue", fg="white", font= ('Helvetica 20 bold'))
    debutton.place(x=50,y=300)
    pbutton = Button(p, text="Prizes", padx=80, pady=60, bg="gold", fg="black", font= ('Helvetica 20 bold'))
    pbutton.place(x=700,y=300)
    ebutton = Button(p, text="Exit", padx=109, pady=60, bg="Red", fg="white", font= ('Helvetica 20 bold'), command=p.destroy)
    ebutton.place(x=375,y=170)
    p.mainloop()
def menu():
    root = Tk()
    root.geometry("1000x550")
    imagebg = Image.open(r'C:\OakCodefest\backgroundscrn.PNG')
    scalar=1.5
    imagebg = imagebg.resize((int(imagebg.width*scalar),int(imagebg.height*scalar)))
    imagebg = ImageTk.PhotoImage(imagebg)
    background= Label(root, image=imagebg)
    background.place(x=0,y=0, relwidth=1, relheight=1)
    
    root.title("SkoolTool")
    label_1 = Label(root, text="Welcome to \n SkoolTool", font=("Helvetica", 20, "bold"), fg="turquoise")
    label_1.place(x=450,y=0)
    
    imagepoints = Image.open("C:\OakCodefest\points.PNG").resize((320,90))
    scalar=1.05
    imagepoints = imagepoints.resize((int(imagepoints.width*scalar),int(imagepoints.height*scalar))) #keep aspects of image same
    imagepoints = ImageTk.PhotoImage(imagepoints)
    buttonp = Button(root, image=imagepoints, command=points)
    buttonp.place(x=40,y=200)

    imageabout = Image.open('C:\OakCodefest\\aboutUsimage.PNG')
    scalar=1.2
    imageabout = imageabout.resize((int(imageabout.width*scalar),int(imageabout.height*scalar)))
    imageabout = ImageTk.PhotoImage(imageabout)
    
    buttona = Button(root, image=imageabout)
    buttona.place(x=620,y=200)

    imageexit = Image.open('C:\OakCodefest\exitimage.jpeg')
    scalar=0.1
    imageexit = imageexit.resize((int(imageexit.width*scalar),int(imageexit.height*scalar)))
    imageexit = ImageTk.PhotoImage(imageexit)
    
    buttonq = Button(root, image=imageexit, command=root.destroy)

    buttonq.place(x=461,y=400)

    root.mainloop()


def dashBoard1():
    def counter_label(label):
            def count():
                    if running:
                            global counter
                            if counter==66600:			
                                    display="Starting..."
                            else:
                                    tt = datetime.fromtimestamp(counter)
                                    string = tt.strftime("%H:%M:%S")
                                    display=string

                            label['text']=display
                            label.after(1000, count)
                            counter += 1
            count()	

    def Start(label):
        global running
        running=True
        counter_label(label)
        start['state']='disabled'
        end_meeting['state']='normal'
    def stop(label):
        global running
        start['state']='normal'
        end_meeting['state']='normal'
        running=False
        global counter
        label['text']='Thanks'
        res = Tk()
        res.geometry("500x500")
        label
        counter=66600
        #stopwatch
        
        
        

    def awardPoints():
        aw = Tk()
        aw.geometry("500x500")
        searchlabel = Label(aw, text="Search for students", font=("Helvetica",14))

        searchlabel.place(x=175, y=0)
        search = Entry(aw, font=("Helvetica", 20))
        search.place(x=100, y=35)
        def addPoints(x):
            name=search.get()
            c.execute("SELECT part_point from child_point where full_name = (?)", (name,))
            rowpoint = c.fetchone()
            y = rowpoint[0]
            global rowpoint1
            rowpoint1= y + x
            c.execute("UPDATE child_point set part_point = (?) where full_name = (?)", (rowpoint1, name,))
            
            c.execute("SELECT weekly_points from child_point where full_name = (?)", (name,))
            rowpoint = c.fetchone()
            y = rowpoint[0]
            global rowpoint1
            rowpoint1 = y + x
            c.execute("UPDATE child_point set weekly_points = (?) where full_name = (?)", (rowpoint1, name,))
            
            c.execute("SELECT annual_points from child_point where full_name = (?)", (name,))
            rowpoint = c.fetchone()
            y = rowpoint[0]
            global rowpoint1
            rowpoint1 = y + x
            c.execute("UPDATE child_point set annual_points = (?) where full_name = (?)", (rowpoint1, name,))
            conn.commit()
            


            
        stu_list=Listbox(aw, width=50)  
        stu_list.place(x=100, y=80)
        button_ten = Button(aw, text="10 points", bg="blue", fg="white", padx=30, pady=15, command=lambda: addPoints(10))
        button_twenty = Button(aw, text="20 points", bg="green", fg="white", padx=30, pady=15, command=lambda: addPoints(20))
        button_fifty = Button(aw, text="50 points", bg="purple", fg="white", padx=30, pady=15,command=lambda: addPoints(50))
        button_custom = Button(aw, text="Custom", bg="turquoise", fg="white")
        exit_points = Button(aw, text="Exit", bg="Red", fg="white", padx=25, pady=10, command = aw.destroy)
        button_ten.place(x=40, y=300)
        button_twenty.place(x=195, y=300)
        button_fifty.place(x=350, y=300)
        button_custom.place(x=230, y=370)
        exit_points.place(x=218, y=425)
        def fill(x):
            search.delete(0, END)
            search.insert(0, stu_list.get(ACTIVE))

            
        stu_list.bind("<<ListboxSelect>>", fill)
        c.execute("SELECT full_name from child_point") 
        rows = c.fetchall()
        studentslist=()
        for i in rows:
            studentslist = studentslist + i
        list(studentslist)
        stu_list.delete(0, END)
        for item in studentslist:
            stu_list.insert(END, item)
        
        
            
    d1 = Tk()
    f = Frame(d1)
    d1.geometry("1000x550")
    label = Label(d1, text="Welcome!", fg="black", font="Verdana 30 bold")
    label.place(x=400,y=225)
    start = Button(d1, text='Start Class', width=6, bg="lime green", fg="white", padx=70, pady=40, font= ('Helvetica 20 bold'), command=lambda:Start(label))
    end_meeting = Button(d1, text='End Class', width=6, bg="red", fg="white", padx=70, pady=40,  font= ('Helvetica 20 bold'), command=lambda:stop(label))
    award_points = Button(d1, text="Award Points", width=6, bg="blue", fg="gold", padx=70,  font= ('Helvetica 20 bold'), pady=40, command=awardPoints)
    exit1 = Button(d1, text="Exit", width=6, bg="orange", fg="purple",  font= ('Helvetica 20 bold'), padx=70, pady=40, command=d1.destroy)
    
    
    f.pack(anchor = 'center',pady=5)
    start.place(x=400, y=25)
    end_meeting.place(x=400, y=400)
    award_points.place(x=700, y=200)
    exit1.place(x=75, y=200)
    d1.mainloop()
        
        
        
menu()



